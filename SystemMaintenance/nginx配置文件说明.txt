# ===================Main configuration=========================
# 代表以什么用户来运行Nginx进程
user www-data;
# 工作进程数
worker_processes auto;
# 进程id文件路径
pid /run/nginx.pid;

events {
	# 单进程连接数，进程x连接数
        worker_connections 768;  #每个process的最大连接数，注意，不光是前端客户连接数，指的是所有可能连接数
        # multi_accept on;  是否允许同时接受多个连接
        # accept_mutex : off   对请求进行序列化，防止多个进程同时唤醒对请求进行争抢，影响性能,默认开启on

}

http {

        ##
        # Basic Settings
        ##

        sendfile on;  # 文件传输
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65; #连接超时时间 单位秒
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;     #mime type网络资源媒体类型
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping                 SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # 日志文件
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # 开启压缩
        ##

        gzip on;
        gzip_disable "msie6";

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/jso                n application/javascript text/xml application/xml applic                ation/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;
}


#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApac                hePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}





# ===================Default server configuration=========================
#
server {
        listen 80 default_server;   # default_server表示将此虚拟主机设置为 该 adress port 规则的默认处理主机
        listen [::]:80 default_server;  #ipv6地址用[::]来表示  所有80端口的请求连接

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;  #主机名称，接收用户请求，可多个名称并列，或使用正则

        location /data {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.

                try_files $uri $uri/ =404;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php7.0-cgi alone:
        #       fastcgi_pass 127.0.0.1:9000;
        #       # With php7.0-fpm:
        #       fastcgi_pass unix:/run/php/php7.0-fpm.sock;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}


#======================== Virtual Host configuration==============================
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;  #主机名称，可用正则，以波浪号开始 ~^www\d+\.sina\.com$ 用户发起的请求
        # linxu可设置ip别名，可通过设置别名，配置虚拟主机
        # ifconfig eth1:0 192.168.1.xx  netmask 255.255.255.0 up

#       alias /ect/aaa 路径别名，匹配后转向别名路径
#       root /var/www/example.com;
        # index指令 ：index file 设置默认首页，作用请求时可不写首页名称，直接跳转至此页面，或根据请求内容设置不同首页
#       index index.html;

        # error_page code  =response  uri指令： error_page 403: /403.html    =response 如301
#

#       location / {
                # root path 配置请求根目录,比如 root /admin 则 请求/data/index/html时  ，在/admin/data/下查找
                # alias path 类似rediect，把location匹配到的请求地址，更换成新的请求alias地址
                # allow deny  允许或禁止客户端访问ip地址
#               try_files $uri $uri/ =404;
#       }
#}

#=================upstream后端服务器配置===============
name:组名
轮调策略Round-Robin顺序请求组内服务器

upstream name {

    #server address [parameters] 例如 adress可以是ip地址或unix:进程间通信,parameters:选项参数  weight = number服务器权重 ,max_fails一定时间范围内最大失败数
    #超出该数值时，认为服务器down
    #server 127.0.0.1:7070; # TCP socket

}